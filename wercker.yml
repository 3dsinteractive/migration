box:
  id: golang:1.10-alpine
  cmd: /bin/sh

no-response-timeout: 20

services:
  - boostport/hbase-phoenix-all-in-one:1.4-4.14
  - id: mysql:5
    env:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
  - postgres:10-alpine
build:
  steps:

    - setup-go-workspace
    - script:
        name: set up environment variables
        code: |
          export PHOENIX_HOST=http://$HBASE_PHOENIX_ALL_IN_ONE_PORT_8765_TCP_ADDR:8765
          export MYSQL_HOST=$MYSQL_PORT_3306_TCP_ADDR:3306
          export POSTGRES_HOST=$POSTGRES_PORT_5432_TCP_ADDR:5432
    - script:
        code: |
          env
    - script:
      name: set up cgo build tools
      code: |
        apk --no-cache --no-progress add build-base
    - script:
      name: get dependencies
      code: |
        apk update
        apk add git
        go get -u github.com/golang/dep/cmd/dep
        dep ensure
    # Build the project
    - script:
        name: go build
        code: |
          go build
    # Test the project
    - script:
        name: go test
        code: |
          go test -cover -v $(go list ./... | grep -v /vendor/)
    # Invoke goveralls
    - script:
        name: goveralls
        code: |
          go get -u github.com/go-playground/overalls
          go get -u github.com/mattn/goveralls
          overalls -project="$WERCKER_GIT_DOMAIN/$WERCKER_GIT_OWNER/$WERCKER_GIT_REPOSITORY" -covermode=set -ignore=.git,vendor,message -debug
          GIT_BRANCH=$WERCKER_GIT_BRANCH goveralls -coverprofile=overalls.coverprofile -service=wercker.com -repotoken $COVERALLS_TOKEN
